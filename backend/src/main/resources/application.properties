#testing
server.port=8081
spring.main.allow-circular-references=true
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://localhost:3306/full-stack-banking?createDatabaseIfNotExist=true&useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=

allowed.origins=http://localhost:4201
spring.data.rest.base-path=/api

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# ===============================
# = OKTA
# ===============================
okta.oauth2.client-id=0oa4bwu8t6uaTyPQD5d7
okta.oauth2.client-secret=FvWeY2WkpW7yW9LmNTupiyIHD9NxQ_jeNLAstAq1
okta.oauth2.issuer=https://dev-5165573.okta.com/oauth2/default

# ===============================
# = STRIPE
# ===============================
stripe.key.secret=sk_test_51KgZckE6okuwhGCfbNYYUBYHeVCyRG6asRyf03StHDxWKSe04DoKMSLoOmYEssTdGDuBgbMsS1zJlpuzW77mGJ8300fjhz2wkB

# ===============================
# = HTTPS CONFIGURATION
# ===============================
# Server web port
#server.port=8443
# Enable HTTPS support (only accept HTTPS requests)
#server.ssl.enabled=true
# Alias that identifies the key in the key store
#server.ssl.key-alias=YOUR_KEY_ALIAS
# Keystore location
#server.ssl.key-store=classpath:YOUR_KEYSTORE.p12
# Keystore password
#server.ssl.key-store-password=secret
# Keystore format
#server.ssl.key-store-type=PKCS12

# ===============================
# = SWAGGER
# ===============================
# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html

# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, validate, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.id.new_generator_mappings=false